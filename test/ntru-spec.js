import assert from 'assert'
import NTRU from '../'

function toHexString(byteArray) {
  return Array.from(byteArray, function(byte) {
    return ('0' + (byte & 0xFF).toString(16)).slice(-2);
  }).join('')
}

describe('ntru test', () => {
  it('should generate keypair', async () => {
    const seed = new Uint8Array([11, 12, 13, 14, 15, 16, 17, 18, 11, 12, 13, 14, 15, 16, 17, 18,
      11, 12, 13, 14, 15, 16, 17, 18, 11, 12, 13, 14, 15, 16, 17, 18, 11, 12, 13, 14, 15, 16, 17, 18,
      11, 12, 13, 14, 15, 16, 17, 18, 11, 12, 13, 14, 15, 16, 17, 18, 11, 12, 13, 14, 15, 16, 17, 18])
    const cipher = new NTRU()
    const keyPair = await cipher.keyPair(seed)

    const privateKeyString = '0203000610d244034fd53efbf7630ad9be65664775c555e1b71b24c644f82be6c02bfe951c9aa38f65c23256dcc2520654c45d1f043b799ea0610a4d6da2b5cbd5bb37a0577d9e5b352ad3419149e682f81c401f89c2ebadc717aee40681efce629cfab722cc841eb1000f00a5a9609ca934b404a69d6442180efe2592ebfb607056a55726c0f5056c246152e372a0d7f8a7db2d1d5e974540508d23eecd6b392ffba17d45bb5729b8eb00301b321a9ebf8ecf4d984bf7323ecf553a4676dd46b68bb0d1b05319d37569d8b802ee00ff9f37318ed956dcd8956f398b04833168f3af95d70acdb2a18a4666dbd80fe23b525ac6d8a1fdf59f7b3c757973285ee759878c4e456fa26a0b4adaa794ef3d501e7884927a670621576c4d05909a9e0aa9ac04c586b763039386bfe5420f97c50531f63b1a7d5e4c48a70562e5aa92572fe87dbbad6e0561167b343de4e672fe7df4c6500c2e371bf7196070ee944fee62d2c5984673ab2de3af61c8a09a4741f2c3d1accad2f125231f3a69f1c0d5f050eb2d212c0de5d983f1c563591abb35839a4b7d576620eb645c698c93c089a47bc7481cf874f73954c4d6f1c503611228583de3d302b991efef0dbb474f788e94e9a72bc06f9b9d4101e0c532ed5e439870dda60ca5e39be006c8f5c276047d1c195eae7940fc637e6e5638a234029fba6f4ad80bdf635955a9b762f0f35f4c108df950d9ed000af762220e71ee6f4e9efd620e4740112d36ad4b6caecf57fd8d1b1678c5e734cace4f0ae03d41a4299a1f9f97613d2d8f4fcba0b515f5d85319c0e760d031373b9a790c9e18d2d378c6579c53e88269e9e30f8d628dd0a97cd0f2bf22128699843008b2ca4d48095cb73cc09c9b8657d84c5ff428ca529945847c28afb165bafb781283d99221db78a60f20047bf167bdbe34e60017f11689c01a299502f0b9a8a03763dd86d28a27f0b590925040b73f58addd5ae97c56cbaa933dc103ecdfce3678cfc4d0b84dd326aed6827e1f742ca9db4f64b49d7e3be2b684c164978a33578e007023c0e414a08f5cc13f9ca91560a6d6cf35c59e66db7084b4c8e8933d9ef991a04d81ec264885544d2bb0e0a3a3b843f346b62f030a28e66af2123c3fdbcd43cd0d67e9c6877c2689791b1c7bca65ef08a59a8903feb9a64841c88f9e599c4e2392e36dec0badd683d992eb618bdb6670b31e2e29ff909bf8bd970f8222c570a445ac16a703472142e8f31c6fd79bc74be5ac5e17cf09c8e43917d429db7483c2a2181110f0d3f4a3f397b61f065b25c1fefbc8594c47c6bcdfc45acc4793f0ca04fe4cc810253ca932d557a3961ebb780498c8b8c36511aa12b75d888b03a5b25f007901bf8c421b8dbafbc8e9b7bae1b72a3d2a7fdbdfb48df0c19e227cde3161cea426c40b663696b6b1b7ac90c584fd5a353e37da103846f78ada5a54eb7182274620508c511b17e980779d5030f752dd209d2915ca51700a382d38356526602055a868ee672283aaccf6a4a810aa9670d3086810b47813292a9cc203252825ce0d50b7bc203a50d9819120cad022cd9ad640';
    const publicKeyString = '0103000610d244034fd53efbf7630ad9be65664775c555e1b71b24c644f82be6c02bfe951c9aa38f65c23256dcc2520654c45d1f043b799ea0610a4d6da2b5cbd5bb37a0577d9e5b352ad3419149e682f81c401f89c2ebadc717aee40681efce629cfab722cc841eb1000f00a5a9609ca934b404a69d6442180efe2592ebfb607056a55726c0f5056c246152e372a0d7f8a7db2d1d5e974540508d23eecd6b392ffba17d45bb5729b8eb00301b321a9ebf8ecf4d984bf7323ecf553a4676dd46b68bb0d1b05319d37569d8b802ee00ff9f37318ed956dcd8956f398b04833168f3af95d70acdb2a18a4666dbd80fe23b525ac6d8a1fdf59f7b3c757973285ee759878c4e456fa26a0b4adaa794ef3d501e7884927a670621576c4d05909a9e0aa9ac04c586b763039386bfe5420f97c50531f63b1a7d5e4c48a70562e5aa92572fe87dbbad6e0561167b343de4e672fe7df4c6500c2e371bf7196070ee944fee62d2c5984673ab2de3af61c8a09a4741f2c3d1accad2f125231f3a69f1c0d5f050eb2d212c0de5d983f1c563591abb35839a4b7d576620eb645c698c93c089a47bc7481cf874f73954c4d6f1c503611228583de3d302b991efef0dbb474f788e94e9a72bc06f9b9d4101e0c532ed5e439870dda60ca5e39be006c8f5c276047d1c195eae7940fc637e6e5638a234029fba6f4ad80bdf635955a9b762f0f35f4c108df950d9ed000af762220e71ee6f4e9efd620e4740112d36ad4b6caecf57fd8d1b1678c5e734cace4f0ae03d41a4299a1f9f97613d2d8f4fcba0b515f5d85319c0e760d031373b9a790c9e18d2d378c6579c53e88269e9e30f8d628dd0a97cd0f2bf22128699843008b2ca4d48095cb73cc09c9b8657d84c5ff428ca529945847c28afb165bafb781283d99221db78a60f20047bf167bdbe34e60017f11689c01a299502f0b9a8a03763dd86d28a27f0b590925040b73f58addd5ae97c56cbaa933dc103ecdfce3678cfc4d0b84dd326aed6827e1f742ca9db4f64b49d7e3be2b684c164978a33578e007023c0e414a08f5cc13f9ca91560a6d6cf35c59e66db7084b4c8e8933d9ef991a04d81ec264885544d2bb0e0a3a3b843f346b62f030a28e66af2123c3fdbcd43cd0d67e9c6877c2689791b1c7bca65ef08a59a8903feb9a64841c88f9e599c4e2392e36dec0badd683d992eb618bdb6670b31e2e29ff909bf8bd970f8222c570a445ac16a703472142e8f31c6fd79bc74be5ac5e17cf09c8e43917d429db7483c2a2181110f0d3f4a3f397b61f065b25c1fefbc8594c47c6bcdfc45acc4793f0ca04fe4cc810253ca932d557a3961ebb780498c8b8c36511aa12b75d888b03a5b25f007901bf8c421b8dbafbc8e9b7bae1b72a3d2a7fdbdfb48df0c19e227cde3161cea426c40b663696b6b1b7ac90c584fd5a353e37da10';
    assert.equal(privateKeyString, toHexString(keyPair.privateKey))
    assert.equal(publicKeyString, toHexString(keyPair.publicKey))
  })

  it('should generate keypair', async () => {
    const cipher = new NTRU()
    const keyPair = await cipher.keyPair()
    const plaintext = new Uint8Array([104, 101, 108, 108, 111, 0]) // "hello"

    const encrypted = await cipher.encrypt(plaintext, keyPair.publicKey)
    const decrypted = await cipher.decrypt(encrypted, keyPair.privateKey) // same as plaintext

    cipher.dispose()

    assert.deepEqual(plaintext, decrypted)
  })
})

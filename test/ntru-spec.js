import assert from 'assert'
import NTRU from '../'

function toHexString(byteArray) {
  return Array.from(byteArray, function(byte) {
    return ('0' + (byte & 0xFF).toString(16)).slice(-2);
  }).join('')
}

describe('ntru test', () => {
  it('should generate keypair', async () => {
    const seed = new Uint8Array([11, 12, 13, 14, 15, 16, 17, 18, 11, 12, 13, 14, 15, 16, 17, 18,
      11, 12, 13, 14, 15, 16, 17, 18, 11, 12, 13, 14, 15, 16, 17, 18, 11, 12, 13, 14, 15, 16, 17, 18,
      11, 12, 13, 14, 15, 16, 17, 18, 11, 12, 13, 14, 15, 16, 17, 18, 11, 12, 13, 14, 15, 16, 17, 18])
    const cipher = new NTRU()
    const keyPair = await cipher.keyPair(seed)

    const privateKeyString = '0203000610994e378e96c8179abc52d181c4779e65edf7d3731de1c4c5b9c0378f45a1bc92419205f0dad6b2f1b9081b7e7f8795a299df793b58e291d5fc77baa0c37d553000624a0bde38d5fe61b4f954bd5622dca5236ba9ecb80720bd755b5153d05951161f07ad768f3a00f70b31dbfb0702f79e712f7c9aae3a7a2bf1838fa2918dc9eeccf885df2220fec67d2a3e6d51c8d14e64847a634cb26e8dff1a25ee44aa1364ad5d00541e44167bb0c2ef4a933c37798d3436bdc0ede00cfaf364b7af8d57d33a7d0982517f31fd248564e194c30b9b8afcd11fc62e99e8051d501bc1ddddbec5683445c7763821faeed9b25c646f3fd0de047a076cc60516ab43da5270d44aed7bcf1addaed87286e5218a9570310ea8c123d2b8b2e972b4fb0534d972c59f34980423f4e6a81579b61a0429c10336e850aa10c7488ba40d7d34b817b91dc151f8aac258b4acd527d0fb9288f0e44732ab07de7181f87e051f5d7d3bb112027965736ec143445572f32cad864b97df0a126c2b82a3479056e271ca938251fc12eabe3daeef9dd20b4727494669e1974649745be0384ab9b00a2e01be15ce012d0d257af0ed07e789fdfada50f5f1e961fc912639245189d0fa7dda227d46863f5d04cec5230c5c3fcb223953bf910e05ee557be01a812827b0e127bceb43519111157f646d9d47a29321f58e98848ac9c74a339b9e8182afc5d58c38c2528f817394d13f09958a5744a9ea3aae34fcfce2de922376fb3243af1a2f3c2ed32b0f4c5809acbaa3b892791e4535af272ea4c5abd1eac00d7073d6c4015a837617cf267ec691ed0e9a55664b61bb8100c57ad12d163f6e722163944785f9baf45b2d1ed5bd1680e3a5400e9c384c76e193cd1c9a7f1513e61159797ca755eb95039e5f46fbb08bffc38fe669fe63ba2bc3ebf951f6218c063a97b6b33587cc0000e4eadf11bf9839d4cba85402059cd1b24555282152e449fa7ab1f3a19fb2d8bf4e45d1eb3301a3789ad0a3eafe5bbfe66de51755fc311f5112968c666450d201fcff54588e68889d7c011c71d9a904f9e64e1d02428de280a0c212b9432b32dc082f938eecd5f683d5eefb2ceaee22a5dc591022737aaf40eda4da0fbd2395da3237293925672596ccff022d0fb38b282120127cb051debc8469906dbe2157c9ee0d318c56796e14efdddefd7d8ddd9df7bdb0b9fe2e154d1cacb45daba41f2995eaea12f62c9aae8588612c440377ae587ab2704e4b5bd5a4227a3a460f54e045bf6c96bc1169072d0470944a0bfb10c9dd753bb745184be0255e2b2e1b12a51a2899acb8b92a6788ea60e9ef5a065ecb3020f4b6cf643ebc2d285579e235cf5293d5e4859635f531473b2edfbf1038c353faf7067ca7aff2ddae61964bde1127107db946ac632cac503571a0775f79e628d343e0637dae59d13619a86c60d5414d8415e60eb456a82ab90a8ccfe24dda92ed16f03097657169b60fc2e3a67376db92fc389128d6fecd929512b8424dded7cdd4a104c8e645b7eb78f8fa1806e2cd4c3a9477657bac033891fe94a418aa0bb4d455d8e4739610';
    const publicKeyString = '0103000610994e378e96c8179abc52d181c4779e65edf7d3731de1c4c5b9c0378f45a1bc92419205f0dad6b2f1b9081b7e7f8795a299df793b58e291d5fc77baa0c37d553000624a0bde38d5fe61b4f954bd5622dca5236ba9ecb80720bd755b5153d05951161f07ad768f3a00f70b31dbfb0702f79e712f7c9aae3a7a2bf1838fa2918dc9eeccf885df2220fec67d2a3e6d51c8d14e64847a634cb26e8dff1a25ee44aa1364ad5d00541e44167bb0c2ef4a933c37798d3436bdc0ede00cfaf364b7af8d57d33a7d0982517f31fd248564e194c30b9b8afcd11fc62e99e8051d501bc1ddddbec5683445c7763821faeed9b25c646f3fd0de047a076cc60516ab43da5270d44aed7bcf1addaed87286e5218a9570310ea8c123d2b8b2e972b4fb0534d972c59f34980423f4e6a81579b61a0429c10336e850aa10c7488ba40d7d34b817b91dc151f8aac258b4acd527d0fb9288f0e44732ab07de7181f87e051f5d7d3bb112027965736ec143445572f32cad864b97df0a126c2b82a3479056e271ca938251fc12eabe3daeef9dd20b4727494669e1974649745be0384ab9b00a2e01be15ce012d0d257af0ed07e789fdfada50f5f1e961fc912639245189d0fa7dda227d46863f5d04cec5230c5c3fcb223953bf910e05ee557be01a812827b0e127bceb43519111157f646d9d47a29321f58e98848ac9c74a339b9e8182afc5d58c38c2528f817394d13f09958a5744a9ea3aae34fcfce2de922376fb3243af1a2f3c2ed32b0f4c5809acbaa3b892791e4535af272ea4c5abd1eac00d7073d6c4015a837617cf267ec691ed0e9a55664b61bb8100c57ad12d163f6e722163944785f9baf45b2d1ed5bd1680e3a5400e9c384c76e193cd1c9a7f1513e61159797ca755eb95039e5f46fbb08bffc38fe669fe63ba2bc3ebf951f6218c063a97b6b33587cc0000e4eadf11bf9839d4cba85402059cd1b24555282152e449fa7ab1f3a19fb2d8bf4e45d1eb3301a3789ad0a3eafe5bbfe66de51755fc311f5112968c666450d201fcff54588e68889d7c011c71d9a904f9e64e1d02428de280a0c212b9432b32dc082f938eecd5f683d5eefb2ceaee22a5dc591022737aaf40eda4da0fbd2395da3237293925672596ccff022d0fb38b282120127cb051debc8469906dbe2157c9ee0d318c56796e14efdddefd7d8ddd9df7bdb0b9fe2e154d1cacb45daba41f2995eaea12f62c9aae8588612c440377ae587ab2704e4b5bd5a4227a3a460f54e045bf6c96bc1169072d0470944a0bfb10c9dd753bb745184be0255e2b2e1b12a51a2899acb8b92a6788ea60e9ef5a065ecb3020f4b6cf643ebc2d285579e235cf5293d5e4859635f531473b2edfbf1038c353faf7067ca7aff2ddae61964bde1127107db946ac632cac503571a0775f79e628d343e0637dae59d13619a8';
    assert.equal(privateKeyString, toHexString(keyPair.privateKey))
    assert.equal(publicKeyString, toHexString(keyPair.publicKey))
  })

  it('should generate keypair', async () => {
    const cipher = new NTRU()
    const keyPair = await cipher.keyPair()
    const plaintext = new Uint8Array([104, 101, 108, 108, 111, 0]) // "hello"

    const encrypted = await cipher.encrypt(plaintext, keyPair.publicKey)
    const decrypted = await cipher.decrypt(encrypted, keyPair.privateKey) // same as plaintext

    cipher.dispose()

    assert.deepEqual(plaintext, decrypted)
  })
})
